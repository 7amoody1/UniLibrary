@model TablesVM

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Orders Details</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="d-flex justify-content-between pb-5 pt-2">
            <span></span>
            @if (Model.IsFines && !User.IsInRole(SD.Role_Admin))
            {
                <a class="me-auto btn btn-success"
                   asp-controller="Order"
                   asp-action="PayFineSummery">
                    Pay All Fines 
                </a>
            }
            <ul class="list-group list-group-horizontal-sm">
                <a class="text-decoration-none"
                   asp-controller="Order"
                   asp-action="Index"
                   asp-route-requestedData="@SD.Fines">
                    <li class="list-group-item">Fines</li>
                </a>
                <a class="text-decoration-none"
                   asp-controller="Order"
                   asp-action="Index"
                   asp-route-requestedData="@SD.Orders">
                    <li class="list-group-item">Orders</li>
                </a>
                <a class="text-decoration-none"
                   asp-controller="Order"
                   asp-action="Index"
                   asp-route-requestedData="@SD.WishItems">
                    <li class="list-group-item">Wish list</li>
                </a>
            </ul>
        </div>
        <table class="table table-bordered table-striped" style="width:100%">
            @if (Model.RequestedData == SD.Fines)
            {
                <thead>
                    @if (User.IsInRole(SD.Role_Admin))
                     {
                         <th>Username</th>
                     }
                    <th>Product Name</th>
                    <th>Amount</th>
                    <th>Type</th>
                    @if (!User.IsInRole(SD.Role_Admin))
                    {
                        <th>Actions</th>
                    }
                </thead>
                <tbody>
                    @foreach (var fines in Model.FinesList)
                    {
                        <tr>
                            @if (User.IsInRole(SD.Role_Admin))
                            {
                                <td>@fines.ApplicationUser!.Name</td>
                            }
                            <td>@fines.Product!.Title</td>
                            <td>@fines.Amount</td>
                            <td>@fines.Type</td>
                            @if (!User.IsInRole(SD.Role_Admin))
                            {
                                <td>
                                    <a class="btn btn-primary" asp-action="PayFineSummery" asp-route-fineId="@fines.Id">Pay</a>
                                </td>
                            }
                            
                        </tr>
                    }
                </tbody>
                <tfoot>
                    @if (User.IsInRole(SD.Role_Admin))
                    {
                        <th>Username</th>
                    }
                    <th>Product Name</th>
                    <th>Amount</th>
                    <th>Type</th>
                    @if (!User.IsInRole(SD.Role_Admin))
                    {
                        <th>Actions</th>
                    }
                </tfoot>
            }
            @if (Model.RequestedData == SD.Orders)
            {
                <thead>
                    <th>Id</th>
                    @if (User.IsInRole(SD.Role_Admin))
                     {
                         <th>Username</th>
                         <th>Email</th>
                         <th>Phone Number</th>
                     }
                     
                    <th>Product Name</th>
                    <th>Date</th>
                    <th>Total</th>
                    @if (User.IsInRole(SD.Role_Admin))
                {
                    <th>Returned</th>
                }
                </thead>
                <tbody>
                    @foreach (var order in Model.OrderDetailsList)
                    {
                        <tr>
                            <td>@order.Id</td>
                            @if (User.IsInRole(SD.Role_Admin))
                            {
                                <td>@order.OrderHeader.ApplicationUser.Name</td>
                                <td>@order.OrderHeader.ApplicationUser</td>
                                <td>@order.OrderHeader.ApplicationUser.PhoneNumber</td>
                            }
                            <td>@order.Product.Title</td>
                            <td>@order.OrderHeader.PaymentDate</td>
                            <td>@order.OrderHeader.OrderTotal</td>
                            @if (User.IsInRole(SD.Role_Admin))
                            {

                                <td class="text-center">
                                    @if (order.Type == SD.Borrow)
                                    {
                                        <input
                                            onclick="handleCheck(this, @order.Id)"
                                            class="form-check-input returned-checkbox"
                                            type="checkbox"
                                            checked="@order.IsReturned">
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <th>Id</th>
                    @if (User.IsInRole(SD.Role_Admin))
                    {
                        <th>Username</th>
                        <th>Email</th>
                        <th>Phone Number</th>
                    }
                    <th>Product Name</th>
                    <th>Date</th>
                    <th>Total</th>
                    @if (User.IsInRole(SD.Role_Admin))
                {

                    <th>Returned</th>
                }
                </tfoot>
            }
            @if (Model.RequestedData == SD.WishItems)
            {
                <thead>
                    @if (User.IsInRole(SD.Role_Admin))
                     {
                         <th>Username</th>
                     }
                    <th>Product Name</th>
                    <th>Enrolled Day</th>
                    <th>Status</th>
                </thead>
                <tbody>
                    @foreach (var wishItem in Model.WishItemsList)
                    {
                        <tr>
                            @if (User.IsInRole(SD.Role_Admin))
                            {
                                <td>@wishItem.ApplicationUser.Name</td>
                            }
                            <td>@wishItem.Product.Title</td>
                            <td>@wishItem.EnrolledDate</td>
                            <td>@(wishItem.IsNotified ? "Notified" : "Pending")</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    @if (User.IsInRole(SD.Role_Admin))
                    {
                        <th>Username</th>
                    }
                    <th>Product Name</th>
                    <th>Enrolled Day</th>
                    <th>Status</th>
                </tfoot>
            }
        </table>

    </div>
</div>

@section Scripts{
    <script src="~/js/order.js"></script>

    <script>
        $('.table').DataTable({
            paging: true, // Enable pagination
            pageLength: 10, // Number of rows per page
            searching: true, // Enable search
            ordering: true, // Enable sorting
            columnDefs: [
                { orderable: false, targets: -1 } // Disable sorting on Action column
            ],
            language: {
                search: "Filter records:", // Customize search placeholder
                paginate: {
                    first: "First",
                    last: "Last",
                    next: "Next",
                    previous: "Previous"
                }
            }
        });

        function handleCheck(checkbox, orderDetailsId) {
            const isReturned = checkbox.checked;
            $.ajax({
                url: '/admin/Order/OnCheckChange',
                type: 'POST',
                data: {
                    orderDetailsId: orderDetailsId,
                    isReturned: isReturned
                },
                success: function () {
                    console.log("Status updated.");
                },
                error: function () {
                    alert("Error updating status.");
                }
            });
        }

    </script>
}
